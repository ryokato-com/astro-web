---
import "../styles/global.css";
import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';

const postsDir = './src/content/posts';

const files = fs.readdirSync(postsDir);
const allPosts = files.map((file) => {
  const fileContent = fs.readFileSync(path.join(postsDir, file), 'utf-8');
  const { data } = matter(fileContent);
  return {
    ...data,
  };
});

const tags = [...new Set(allPosts.flatMap(post => post.tags))];
const selectedTag = Astro.url.searchParams.get('tag') || null;

const filteredPosts = selectedTag
  ? allPosts.filter(post =>
      Array.isArray(post.tags) && post.tags.includes(selectedTag)
    )
  : allPosts;
---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <title>記事一覧</title>
  </head>
  <body class="p-8 font-sans bg-gray-50 text-gray-800">
    <h1 class="text-3xl font-bold mb-6">記事一覧</h1>

    <!-- タグボタン -->
    <div class="mb-6 flex flex-wrap gap-2" id="tag-buttons">
      <button data-tag="all" class="tag-button px-3 py-1 bg-blue-100 rounded hover:bg-blue-200">すべて</button>
      {tags.map(tag => (
        <button class="tag-button px-3 py-1 bg-blue-100 rounded hover:bg-blue-200" data-tag={tag}>
          {tag}
        </button>
      ))}
    </div>

    <!-- 投稿一覧 -->
    <ul id="post-list" class="space-y-4">
      {filteredPosts.map(post => (
        <li class="bg-white shadow p-4 rounded post" data-tags={post.tags.join(',')}>
          <a href={`/blog/${post.slug}`} class="text-xl font-semibold hover:underline block mb-1">
            {post.title}
          </a>
          <div class="text-sm text-gray-500">{post.date}</div>
          <div class="flex gap-2 mt-2">
            {post.tags.map(tag => (
              <span class="px-2 py-1 bg-gray-200 rounded text-xs">{tag}</span>
            ))}
          </div>
        </li>
      ))}
    </ul>

    <!-- JSを読み込み -->
    <script src="/filter.js" is:inline></script>
  </body>
</html>
